<?php

namespace Dime\TimetrackerBundle\Entity;

use Dime\TimetrackerBundle\Entity\EntityRepository;
use Doctrine\ORM\QueryBuilder;
/**
 * ActivityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ActivityRepository extends EntityRepository
{
    public function search($text, QueryBuilder $qb)
    {
        if ($qb == null) {
            throw \Exception("QueryBuilder must be set");
        }

        $aliases = $qb->getRootAliases();
        $alias = array_shift($aliases);

        $qb->andWhere($qb->expr()->like($alias . '.description', ':text'));
        $qb->setParameter('text', '%'  . $text . '%');

        return $qb;
    }

    public function scopeByDate($date, QueryBuilder $qb)
    {
        if ($qb == null) {
            throw \Exception("QueryBuilder must be set");
        }

        $aliases = $qb->getRootAliases();
        $alias = array_shift($aliases);

        $qb->leftJoin($alias . '.timeslices', 't');

        if (is_array($date)) {
            $qb->andWhere(
                $qb->expr()->orX(
                    $qb->expr()->between($alias . '.updatedAt', ':from', ':to'),
                    $qb->expr()->between('t.startedAt', ':from', ':to')
                )
            );
            $qb->setParameter('from', $date[0]);
            $qb->setParameter('to', $date[1]);
        } else {
            $qb->andWhere(
                $qb->expr()->orX(
                    $qb->expr()->like($alias . '.updatedAt', ':date'),
                    $qb->expr()->like('t.startedAt', ':date')
                )
            );
            $qb->setParameter('date', $date . '%');
        }

        return $qb;
    }

    public function scopeByCustomer($id, QueryBuilder $qb)
    {
        return $this->scopeByField('customer', $id, $qb);
    }

    public function scopeByProject($id, QueryBuilder $qb)
    {
        return $this->scopeByField('project', $id, $qb);
    }

    public function scopeByService($id, QueryBuilder $qb)
    {
        return $this->scopeByField('service', $id, $qb);
    }
}
